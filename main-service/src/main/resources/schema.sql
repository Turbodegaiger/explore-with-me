DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS events CASCADE;
DROP TABLE IF EXISTS compilations CASCADE;
DROP TABLE IF EXISTS compilations_event CASCADE;
DROP TABLE IF EXISTS requests CASCADE;

CREATE TABLE IF NOT EXISTS categories (
id BIGINT GENERATED BY DEFAULT AS IDENTITY,
name VARCHAR(50) NOT NULL,
CONSTRAINT PK_CATEGORY PRIMARY KEY(id),
CONSTRAINT UQ_CATEGORY_NAME UNIQUE(name)
);

CREATE TABLE IF NOT EXISTS users (
id BIGINT GENERATED BY DEFAULT AS IDENTITY,
name VARCHAR(250) NOT NULL,
email VARCHAR(254) NOT NULL,
CONSTRAINT PK_USER PRIMARY KEY(id),
CONSTRAINT UQ_USER_EMAIL UNIQUE(email)
);

CREATE TABLE IF NOT EXISTS events (
id BIGINT GENERATED BY DEFAULT AS IDENTITY,
annotation VARCHAR(2000) NOT NULL,
category BIGINT NOT NULL,
description VARCHAR(7000) NOT NULL,
event_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
created_on TIMESTAMP WITHOUT TIME ZONE NOT NULL,
published_on TIMESTAMP WITHOUT TIME ZONE,
title VARCHAR(120) NOT NULL,
rating BIGINT NOT NULL,
paid BOOLEAN NOT NULL,
available BOOLEAN NOT NULL,
initiator BIGINT NOT NULL,
views BIGINT NOT NULL,
state VARCHAR(50) NOT NULL,
participant_limit BIGINT NOT NULL,
confirmed_requests BIGINT NOT NULL DEFAULT 0,
request_moderation BOOLEAN NOT NULL,
CONSTRAINT PK_EVENT PRIMARY KEY(id),
CONSTRAINT FK_EVENT_CATEGORY FOREIGN KEY(category) REFERENCES categories(id),
CONSTRAINT FK_EVENT_INITIATOR FOREIGN KEY(initiator) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS requests (
id BIGINT GENERATED BY DEFAULT AS IDENTITY,
event BIGINT NOT NULL,
requester BIGINT NOT NULL,
status VARCHAR(50) NOT NULL,
created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
CONSTRAINT PK_REQUEST PRIMARY KEY(id),
CONSTRAINT FK_EVENT_ID_FOR_REQUEST FOREIGN KEY(event) REFERENCES events(id),
CONSTRAINT FK_REQUESTER_FOR_REQUEST FOREIGN KEY(requester) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS compilations (
id BIGINT GENERATED BY DEFAULT AS IDENTITY,
title VARCHAR(50) NOT NULL,
pinned BOOLEAN NOT NULL,
CONSTRAINT PK_COMPILATION PRIMARY KEY(id),
CONSTRAINT UQ_COMPILATION_TITLE UNIQUE(title)
);

CREATE TABLE IF NOT EXISTS compilations_event (
compilation_id BIGINT NOT NULL,
event_id BIGINT NOT NULL,
CONSTRAINT FK_COMPILATION_ID_FOR_EVENT FOREIGN KEY(compilation_id) REFERENCES compilations(id),
CONSTRAINT FK_EVENT_ID_FOR_COMPILATION FOREIGN KEY(event_id) REFERENCES events(id)
);